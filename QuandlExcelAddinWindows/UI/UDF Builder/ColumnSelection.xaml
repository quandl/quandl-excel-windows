<UserControl x:Class="Quandl.Excel.Addin.UI.UDF_Builder.ColumnSelection"
             AutomationProperties.AutomationId="StepThreePane"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:dragDrop="clr-namespace:GongSolutions.Wpf.DragDrop;assembly=GongSolutions.Wpf.DragDrop"
             xmlns:models="clr-namespace:Quandl.Shared.Models;assembly=Quandl.Shared"
             xmlns:helpers="clr-namespace:Quandl.Shared.Helpers;assembly=Quandl.Shared"
             mc:Ignorable="d"
             d:DesignHeight="300" d:DesignWidth="400"
             Padding="0,0,0,10">
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="1*" MinWidth="200" />
            <ColumnDefinition Width="3" />
            <ColumnDefinition Width="1*" MinWidth="200" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="1*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <TreeView x:Name="AvailableColumnsTreeView" Grid.Column="0" Grid.Row="0" Margin="0,0,5,0"
                  ItemsSource="{Binding}" ToolTip="Select the columns you wish to include"
                  AutomationProperties.AutomationId="ColumnsTreeView">
            <TreeView.Resources>
                <HierarchicalDataTemplate DataType="{x:Type models:DataHolderDefinition}"
                                          ItemsSource="{Binding Columns}">
                    <CheckBox Content="{Binding Name}" AutomationProperties.AutomationId="{Binding Name}"
                              IsChecked="{Binding Path=(helpers:CheckedItemHelper.IsChecked), Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                        <CheckBox.Style>
                            <Style TargetType="{x:Type CheckBox}">
                                <Setter Property="Foreground" Value="Black" />
                                <Setter Property="Visibility" Value="Visible" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=(helpers:CheckedItemHelper.IsChecked)}"
                                                 Value="False">
                                        <Setter Property="Foreground" Value="LightGray" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </CheckBox.Style>
                    </CheckBox>
                </HierarchicalDataTemplate>
                <DataTemplate DataType="{x:Type models:DataColumn}">
                    <CheckBox Content="{Binding Content}" AutomationProperties.AutomationId="{Binding Name}"
                              IsChecked="{Binding Path=(helpers:CheckedItemHelper.IsChecked), Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                        <CheckBox.Style>
                            <Style TargetType="{x:Type CheckBox}">
                                <Setter Property="Foreground" Value="Black" />
                                <Setter Property="Visibility" Value="Visible" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=(helpers:CheckedItemHelper.IsChecked)}"
                                                 Value="False">
                                        <Setter Property="Foreground" Value="LightGray" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </CheckBox.Style>
                    </CheckBox>
                </DataTemplate>
            </TreeView.Resources>
            <TreeView.ItemContainerStyle>
                <Style TargetType="{x:Type TreeViewItem}">
                    <Setter Property="IsExpanded" Value="True" />
                </Style>
            </TreeView.ItemContainerStyle>
        </TreeView>
        <GridSplitter Grid.Column="1" Grid.Row="0" HorizontalAlignment="Stretch" ResizeDirection="Columns" />
        <ListBox x:Name="SelectedColumnOrderListBox" Grid.Column="2" Grid.Row="0" Margin="5,0,0,0"
                 ItemsSource="{Binding}" ToolTip="Re-order your selected columns"
                 dragDrop:DragDrop.IsDragSource="True" dragDrop:DragDrop.IsDropTarget="True"
                 SelectionChanged="SelectedColumnOrderListBox_SelectionChanged" SelectionMode="Multiple"
                 AutomationProperties.AutomationId="SelectedColumns">
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <TextBlock Text="{Binding LongName}" AutomationProperties.AutomationId="{Binding LongName}" />
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>
        <Button x:Name="ButtonAddAll" Grid.Column="0" Grid.Row="1" HorizontalAlignment="Right" Content="Add All"
                Padding="5" Margin="0,10,5,0" MinWidth="75" Click="ButtonAddAll_Click" />
        <StackPanel Orientation="Horizontal" Grid.Column="2" Grid.Row="1" Margin="5,10,0,0" HorizontalAlignment="Left">
            <Button x:Name="ButtonRemoveAll" Content="Remove All" Padding="5" Margin="0,0,10,0" MinWidth="75"
                    Click="ButtonRemoveAll_Click" />
            <Button x:Name="ButtonRemoveSelected" Content="Remove Selected" Padding="5" IsEnabled="false"
                    Click="ButtonRemoveSelected_Click" />
        </StackPanel>
    </Grid>
</UserControl>